package viv.home;

/**
 Задание 6
 Теперь перейдем к классу Field.
 Он будет отвечать за хранение данных о текущих занятых и свободных клетках на поле игры.
 Добавь в класс Field два поля поля: width (ширина) типа int, height(высота) типа int.
 Так же нам понадобится матрица - двумерный массив: matrix(матрица) типа int[][];
 Там же добавь getter'ы для созданных переменных.
 Добавь конструктор с двумя параметрами width и height. И не забудь про матрицу.

 ВАЖНО!
 Двумерный массив можно представить как массив массивов или как прямоугольную матрицу.
 При этом первой координатой в массиве у нас будет номер строки, а второй - столбца.
 Другими словами ячейка с координатами x, y - это matrix[y][x].

 */
public class Field {

    private int width;
    private int height;

    /**Двумерный массив можно представить как массив массивов или как прямоугольную матрицу.
     При этом первой координатой в массиве у нас будет номер строки, а второй - столбца.
     Другими словами ячейка с координатами x, y - это matrix[y][x].*/
    int[][] matrix;

    public int getWidth() {
        return width;
    }

    public int getHeight() {
        return height;
    }
    /**Задание 7
     Нам понадобится еще 4 метода в классе Field:
     а) print() - объект будет отрисовывать на экран свое текущее состояние;
     б) removeFullLines() - будет удалять из матрицы полностью заполненные строки и сдвигать вышележащие строки вниз;
     в) Integer getValue(int x, int y) - возвращает значение которое находится в матрице с координатами x и y;
     г) void setValue(int x, int y, int value) - устанавливает переданное значение в ячейку массива (матрицы) с координатами x, y. */

    public void print(){}
    public void removeFullLines(){}
    public Integer getValue(int x, int y){
        return null;
    }
    public void setValue(int x, int y, int value){

    }
}
